#!/bin/bash
set -e

SELF="$0"

LOSETUP=/sbin/losetup
MKFS=/sbin/mkfs

TEMP=$( getopt -n "$( basename $0 )" -o hf:s:m:t:d: --long help,file:,size:,mount:,type:,destroy: -- "$@" )
eval set -- "$TEMP"

MOUNT=
SIZE=
FILE=
FILESYSTEM=
TARGET=
MODE=create

display_help(){
	echo "Usage: ${SELF} [-f|--file pathname] [-s|--size size-in-megabytes] [-m|--mount mountpoint]"
}

create_filesystem(){
	MOUNT="${1:-}"
	SIZE="${2:-50}"
	FILE="${3:-}"
	FILESYSTEM="${4:-ext2}"

	if [ "x$MOUNT" = "x" ]; then
		MOUNT="/tmp/$( uuidgen )"
	fi

	if [ ! -d "$MOUNT" ]; then
		mkdir -p "$MOUNT"
	fi

	if [ "x$FILE" = "x" ]; then
		FILE="$( tempfile )"
	fi

	LOOP="$( sudo $LOSETUP -f )"

	dd if=/dev/urandom of="$FILE" bs=1M count="$SIZE" >/dev/null 2>&1
	sudo $LOSETUP -e blowfish -p 0 "$LOOP" "$FILE" < <( dd if=/dev/urandom bs=1 count=1024 2>/dev/null )
	sudo $MKFS -t "$FILESYSTEM" "$LOOP" >/dev/null 2>&1
	sudo mount "$LOOP" "$MOUNT"
	echo "Filesystem mounted at $MOUNT using $FILE"
}

destroy_filesystem(){
	TARGET="$1"

	if [ ! -e "$TARGET" ]; then
		echo "Unknown target: $TARGET" >&2
		exit 2
	elif [ -d "$TARGET" ]; then
		MOUNT="$( realpath "$TARGET" )"
		LOOP="$( grep "$MOUNT" /proc/mounts | awk '{ print $1 }' )"
		FILE="$( sudo $LOSETUP "$LOOP" | sed 's/[^(]*(\([^)]*\).*/\1/' )"
	else
		FILE="$( realpath "$TARGET" )"
		LOOP="$( sudo $LOSETUP -a | grep "$FILE" | sed 's/\([^:]*\).*/\1/' )"
		MOUNT="$( grep "^$LOOP" /proc/mounts | awk '{ print $2 }' )"
	fi
	sudo umount "$MOUNT"
	sudo $LOSETUP -d "$LOOP"
	rm -rf "$FILE"
	echo "Filesystem destroyed."
}

while true; do
	case "$1" in
		-h|--help)
			display_help
			shift
			;;
		-f|--file)
			FILE="$2"
			shift 2
			;;
		-s|--size)
			SIZE="$2"
			shift 2
			;;
		-m|--mount)
			MOUNT="$2"
			shift 2
			;;
		-t|--type)
			FILESYSTEM="$2"
			shift 2
			;;
		-d|--destroy)
			MODE=destroy
			TARGET="$2"
			shift 2
			;;
		--)
			shift
			break
			;;
		*)
			echo "Unknown option" >&2
			display_help >&2
			exit 1
			;;
	esac
done

case "$MODE" in
	destroy)
		destroy_filesystem "$TARGET"
		;;
	create|*)
		create_filesystem "$MOUNT" "$SIZE" "$FILE"
		;;
esac

